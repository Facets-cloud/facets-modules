intent: kubernetes_node_pool
flavor: aws_karpenter
version: '0.1'
clouds:
- aws
title: EKS Auto Mode Karpenter NodePool Manager
description: Creates and manages dynamic node pools for EKS Auto Mode clusters with
  intelligent scaling and cost optimization.
spec:
  type: object
  x-ui-order:
  - name
  - instance_requirements
  - scaling
  - networking
  - storage
  - scheduling
  - tags
  properties:
    name:
      type: string
      title: Node Pool Name
      description: Name for this node pool configuration. Must be a valid Kubernetes
        resource name.
      default: custom-nodepool
      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
      minLength: 1
      maxLength: 63
      x-ui-error-message: Must be a valid Kubernetes resource name (lowercase, alphanumeric,
        hyphens allowed)
    instance_requirements:
      type: object
      title: Instance Requirements
      description: Define what types of EC2 instances this node pool can use.
      x-ui-toggle: true
      properties:
        instance_families:
          type: string
          title: Instance Families
          description: Comma-separated EC2 instance families (e.g., c5,m5,r5 for compute/memory/storage
            optimized).
          default: c5,c6i,m5,m6i,r5,r6i
          pattern: ^[a-z0-9]+(,[a-z0-9]+)*$
          x-ui-error-message: Must be comma-separated EC2 instance families (e.g.,
            c5,m5,r5)
        cpu_range:
          type: string
          title: CPU Range
          description: Comma-separated vCPU counts to allow (e.g., 2,4,8,16). Must
            be powers of 2 or common CPU counts.
          default: 2,4,8,16
          pattern: ^[0-9]+(,[0-9]+)*$
          x-ui-error-message: Must be comma-separated CPU counts (e.g., 2,4,8,16)
        architectures:
          type: string
          title: CPU Architectures
          description: Comma-separated architectures to support. Must match Kubernetes
            architecture labels.
          default: amd64,arm64
          enum:
          - amd64
          - arm64
          - amd64,arm64
        capacity_types:
          type: string
          title: Instance Pricing
          description: Choose between cost-optimized Spot instances or reliable On-Demand
            instances.
          default: spot,on-demand
          enum:
          - spot
          - on-demand
          - spot,on-demand
        availability_zones:
          type: string
          title: Availability Zones
          description: Comma-separated AZs where nodes can be placed (leave empty
            to use all VPC zones). Must be valid AWS AZ format.
          default: ''
          pattern: ^$|^[a-z]{2}-[a-z]+-[0-9]+[a-z](,[a-z]{2}-[a-z]+-[0-9]+[a-z])*$
          x-ui-overrides-only: true
          x-ui-error-message: Must be valid AWS availability zones (e.g., us-west-2a,us-west-2b)
            or empty
        instance_generation:
          type: string
          title: Minimum Instance Generation
          description: Minimum EC2 instance generation to allow (e.g., 3,4,5). Higher
            generations provide better performance.
          default: '3'
          pattern: ^[0-9]+(,[0-9]+)*$
          x-ui-error-message: Must be numeric generation values (e.g., 3,4,5)
        instance_categories:
          type: string
          title: Instance Categories
          description: Comma-separated EC2 instance categories to allow. Controls
            the type of compute optimization.
          default: c,m,r
          pattern: ^[a-z](,[a-z])*$
          x-ui-error-message: Must be single letters representing EC2 categories (e.g.,
            c,m,r,g)
    scaling:
      type: object
      title: Scaling Configuration
      description: Control how the node pool scales and manages resources.
      x-ui-toggle: true
      properties:
        max_cpu:
          type: string
          title: Maximum CPU
          description: Maximum total CPU cores for this node pool. Must be a positive
            integer.
          default: '1000'
          pattern: ^[1-9][0-9]*$
          x-ui-error-message: Must be a positive integer representing CPU cores
        max_memory:
          type: string
          title: Maximum Memory
          description: Maximum total memory for this node pool (e.g., 1000Gi). Must
            use Kubernetes memory format.
          default: 1000Gi
          pattern: ^[1-9][0-9]*([KMGT]i|[KMGT])?$
          x-ui-error-message: Must be valid Kubernetes memory format (e.g., 1000Gi,
            500Mi)
        consolidation_policy:
          type: string
          title: Cost Optimization
          description: How aggressively to consolidate underutilized nodes to save
            costs.
          default: WhenEmptyOrUnderutilized
          enum:
          - WhenEmpty
          - WhenEmptyOrUnderutilized
        consolidation_delay:
          type: string
          title: Consolidation Delay
          description: How long to wait before consolidating nodes. Must be valid
            duration format.
          default: 30s
          pattern: ^([0-9]+(\.[0-9]+)?(ns|us|ms|s|m|h))+$
          x-ui-error-message: Must be valid duration (e.g., 30s, 5m, 1h)
        expire_after:
          type: string
          title: Node Expiration
          description: How long nodes can live before being replaced. Use 'Never'
            to disable expiration.
          default: 720h
          pattern: ^(Never|([0-9]+(\.[0-9]+)?(ns|us|ms|s|m|h))+)$
          x-ui-error-message: Must be 'Never' or valid duration (e.g., 720h, 24h)
        termination_grace_period:
          type: string
          title: Termination Grace Period
          description: How long a node can drain before forcible termination. Must
            be valid duration.
          default: 48h
          pattern: ^([0-9]+(\.[0-9]+)?(ns|us|ms|s|m|h))+$
          x-ui-error-message: Must be valid duration (e.g., 48h, 1h, 30m)
    networking:
      type: object
      title: Networking Configuration
      description: Advanced networking settings for the nodes.
      x-ui-toggle: true
      properties:
        subnet_type:
          type: string
          title: Subnet Type
          description: Select which type of subnets to place the nodes in from the
            VPC network configuration.
          default: private
          enum:
          - private
          - public
          - database
        proxy_configuration:
          type: object
          title: Proxy Configuration
          description: HTTP/HTTPS proxy settings for restricted environments.
          x-ui-toggle: true
          properties:
            https_proxy:
              type: string
              title: HTTPS Proxy URL
              description: Proxy URL for HTTPS traffic (e.g., http://proxy.company.com:8080).
              pattern: ^https?://[a-zA-Z0-9.-]+:[0-9]+/?$
              x-ui-error-message: Must be valid HTTP/HTTPS URL with port (e.g., http://proxy.company.com:8080)
            bypass_domains:
              type: string
              title: Bypass Domains
              description: Comma-separated domains to bypass proxy.
              default: localhost,127.0.0.1,169.254.169.254,.internal,.eks.amazonaws.com
              pattern: ^[a-zA-Z0-9.-]+(,[a-zA-Z0-9.-]+)*$
              x-ui-error-message: Must be comma-separated domain names or IP addresses
    storage:
      type: object
      title: Storage Configuration
      description: Configure storage settings for the nodes.
      x-ui-toggle: true
      properties:
        disk_size:
          type: string
          title: Disk Size
          description: Size of the root disk for each node. Must be valid Kubernetes
            storage format (minimum 20Gi for EKS).
          default: 80Gi
          pattern: ^([2-9][0-9]|[1-9][0-9]{2,})(Gi|G|Ti|T|Mi|M|Ki|K)?$
          x-ui-error-message: Must be at least 20Gi and use valid Kubernetes storage
            format (e.g., 80Gi, 100Gi)
        disk_type:
          type: string
          title: Disk Performance
          description: Storage performance level for the nodes.
          default: gp3-standard
          enum:
          - gp3-standard
          - gp3-high-performance
          - io2-ultra-performance
        encryption_key:
          type: string
          title: Encryption Key (Optional)
          description: KMS key ID/ARN for disk encryption (leave empty for default
            encryption).
          pattern: ^$|^arn:aws:kms:[a-z0-9-]+:[0-9]{12}:key/[a-f0-9-]{36}$|^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          x-ui-error-message: Must be empty, valid KMS key ID, or KMS ARN
    scheduling:
      type: object
      title: Workload Scheduling
      description: Control which workloads can run on these nodes.
      x-ui-toggle: true
      properties:
        node_labels:
          type: string
          title: Node Labels
          description: YAML-formatted labels to apply to nodes for workload targeting.
            Must be valid Kubernetes labels.
          default: ''
          x-ui-yaml-editor: true
        dedicated_workloads:
          type: boolean
          title: Dedicated for Specific Workloads
          description: Whether to reserve these nodes for specific workloads only.
          default: false
        workload_isolation_taints:
          type: string
          title: Workload Isolation Taints
          description: YAML-formatted taints for workload isolation. Applied when
            dedicated workloads is enabled.
          default: ''
          x-ui-yaml-editor: true
          x-ui-visible-if:
            field: spec.scheduling.dedicated_workloads
            values:
            - true
        startup_taints:
          type: string
          title: Startup Taints
          description: YAML-formatted temporary taints applied during node initialization
            (e.g., for CNI setup). These don't require pod tolerations.
          default: ''
          x-ui-yaml-editor: true
    tags:
      type: string
      title: Additional Tags
      description: YAML-formatted custom tags to apply to EC2 instances for cost tracking
        and organization. Must be valid AWS tags.
      default: ''
      x-ui-yaml-editor: true
  required:
  - name
inputs:
  kubernetes_cluster:
    type: '@outputs/kubernetes'
    displayName: EKS Cluster
    description: The EKS cluster where the node pool will be created
    optional: false
    providers:
    - helm
    - kubernetes
    - kubernetes-alpha
  network_details:
    type: '@outputs/aws_vpc'
    displayName: VPC Network
    description: VPC network details for automatic subnet selection based on public/private
      IP preference
    optional: false
outputs:
  default:
    type: '@outputs/kubernetes_node_pool'
    title: Karpenter NodePool and NodeClass
sample:
  kind: kubernetes_node_pool
  flavor: aws_karpenter
  version: '0.1'
  metadata:
    name: production-nodepool
  spec:
    name: production-nodes
    instance_requirements:
      instance_families: c5,m5,r5
      cpu_range: 4,8,16
      architectures: amd64,arm64
      capacity_types: spot,on-demand
      instance_generation: '3'
      instance_categories: c,m,r
    scaling:
      max_cpu: '500'
      max_memory: 2000Gi
      consolidation_policy: WhenEmptyOrUnderutilized
      consolidation_delay: 30s
      expire_after: 720h
      termination_grace_period: 48h
    networking:
      subnet_type: private
    storage:
      disk_size: 100Gi
      disk_type: gp3-standard
    scheduling:
      node_labels: 'environment: production

        workload-type: general

        '
      dedicated_workloads: true
      workload_isolation_taints: "- key: nvidia.com/gpu\n  value: 'true'\n  effect:\
        \ NoSchedule\n- key: dedicated\n  value: production\n  effect: NoSchedule\n"
      startup_taints: "- key: node.cilium.io/agent-not-ready\n  value: 'true'\n  effect:\
        \ NoExecute\n"
    tags: "Environment: production\nTeam: platform\nCostCenter: engineering \n"
